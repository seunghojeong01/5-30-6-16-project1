insert into room(rno,room_type,room_price,max_value) values((select max(rno) from room)+1,'single',150000,2);
insert into room(rno,room_type,room_price,max_value) values((select max(rno) from room)+1,'double',250000,4);
insert into room(rno,room_type,room_price,max_value) values((select max(rno) from room)+1,'luxury',500000,8);

insert into roomhistory(rno,room_clean,dns_check,check_in) values(1001,'inspect','0','0');
insert into roomhistory(rno,room_clean,dns_check,check_in) values((select max(rno) from roomhistory)+1,'inspect','0','0');


ALTER TABLE RoomHistoryDB
ADD CONSTRAINT fk_rno foreign KEY(rno) references RoomDB(rno);

CONSTRAINT rno FOREIGN KEY(rno)
REFERENCES roomdb(rno) ON DELETE CASCADE


create sequence cusomer_seq increment by 1 start with 500 maxvalue 1000 CYCLE;


drop sequence cusomer_seq

intsert into(rno) value(cusomer_seq)

update room set rno=1001,room_price=210000,max_value=3 where rno = 1001;


insert into customer(cno,rno,cname,cphone,cemail,in_date,out_date,rsv_total)
values(customer_seq,1001,'hjs','123','1234578',sysdate,'2022-06-15',0);


1.체크인 접수
insert into customer(rno,cname,cphone,cemail,in_date,out_date,rsv_total) 
values(?,?,?,?,sysdate,date,0);

2.체크아웃 접수
delete from customer
where rno=?

3.전체 객실 현황 조회// 전체 조회 customer roomhistory join
select c.rno,c.cname,c.in_date,c.out_date,r.room_clean,r.check_in,r.dns_check
from customer c INNER JOIN roomhistory r
on c.rno = r.rno;


4.객실별 현황 조회//단건 조회 customer roomhistory join
select c.rno,c.cname,c.in_date,c.out_date,r.room_clean,r.check_in,r.dns_check
from customer c INNER JOIN roomhistory r
on c.rno = r.rno
where c.rno=?;


5.입실 가능 객실 목록//roomhistory select
select rno from roomhistory
where room_clean ="inspect" AND check_in="0" AND dns_check="0";


6.객실 변경
update customer set rno=?
where rno=?;


객실 정보 관리 FOR ADMIN // 잘 변하지 않는 값들만 변경하는 메뉴
1.객실 전체 목록 조회 ROOM DB 조회
2.개별 객실 정보 조회 ROOM DB 조회
3.객실 정보 수정
4.객실 추가
5.객실 삭제


select r.rno,c.cname,nvl(to_char(c.in_date,'YYYY-MM-DD'),'0000-00-00'),nvl(to_char(c.out_date,'YYYY-MM-DD'),'0000-00-00'),r.room_clean,
CASE r.check_in WHEN '0' THEN '공실' ELSE '재실' END,
CASE r.dns_check WHEN '0' THEN 'O' ELSE 'X' END
from customer c RIGHT OUTER JOIN roomhistory r
on c.rno = r.rno order by rno asc;


select r.rno,c.cname,c.in_date,c.out_date,r.room_clean,
CASE check_in WHEN '0' THEN '공실' ELSE '재실' END,
CASE r.dns_check WHEN '0' THEN 'X' ELSE 'O' END
from customer c RIGHT OUTER JOIN roomhistory r
on c.rno = r.rno order by rno asc;